{"version":3,"sources":["services/numbers.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","wantedPerson","put","RemoveButton","handleRemove","person","onClick","PrintPerson","name","number","key","AddPerson","onSubmit","value","onChange","type","FiltterIt","newFilter","Notification","message","className","ErrorNotification","errorMessage","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setNewFilter","setMessage","setErrorMessage","useEffect","numberService","initialNumbers","window","confirm","setTimeout","location","reload","cutNumber","filterNames","filter","toLowerCase","includes","event","target","preventDefault","length","alert","map","find","catch","error","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e09fcab3.chunk.js","sourcesContent":["import axios from \"axios\"\nconst baseUrl = \"/api/persons\" //3.9 api/ lisätty\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n\n  return request.then(response => response.data)\n}\n\nconst edit = (wantedPerson) => {\n\n  const request = axios.put(`${baseUrl}/${wantedPerson.id}`, wantedPerson)\n\n  return request.then(response => response.data)\n}\n\nexport default {getAll, create, remove, edit}\n","import React, {useState, useEffect} from \"react\"\nimport numberService from \"./services/numbers\"\nimport \"./index.css\"\n\nconst RemoveButton = ({handleRemove, person}) => {\n  const removeNumber = () => {\n    handleRemove(person)\n  }\n\n  return (<button onClick={removeNumber}>delete</button>)\n}\n\nconst PrintPerson = ({person, handleRemove}) => {\n  return(<p>{person.name} {person.number} <RemoveButton key={person.id} person={person} handleRemove={handleRemove}/></p>)\n}\n\nconst AddPerson = ({onSubmit, name, number}) => {\n  return(\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={name.value} onChange={name.onChange}/>\n      </div>\n      <div>\n        number: <input value={number.value} onChange={number.onChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst FiltterIt = ({newFilter, onChange}) => {\n  return(<div>\n      filter <input value={newFilter} onChange={onChange}/>\n    </div>)\n}\n\nconst Notification =({message}) => {\n  if (message===null){\n    return null\n  }\n  //console.log(\"ilmoitus aktivoitu\")\n  return (\n    <div className=\"getMessage\">\n      {message}\n    </div>\n  )\n}\n\nconst ErrorNotification =({errorMessage}) => {\n  if (errorMessage===null){\n    return null\n  }\n  return(\n    <div className=\"getErrorMessage\">{errorMessage}</div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [newFilter, setNewFilter] = useState(\"\")\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() =>{\n    numberService\n      .getAll()\n      .then(initialNumbers => {\n        setPersons(initialNumbers)\n      })\n  }, [])\n\n  const addNumber = (event) => {\n    event.preventDefault()\n    const newObject ={\n      name: newName, number: newNumber,\n    }\n\n    if (newObject.number.length<1 | newObject.name.length<1){\n      alert(\"Fill both name and number\")\n      return\n    }\n\n    const check=persons.map(person => person.name)\n\n    //Tästä päivitys\n    if (check.includes(newObject.name)){\n      const wantedPerson= persons.find(person => person.name===newObject.name)\n      wantedPerson.number=newObject.number\n\n      if(window.confirm(`${newObject.name} is already added to phonebook, replace the old number with a new one?`)){\n        numberService\n          .edit(wantedPerson)\n          .then(() =>{\n            setPersons(persons)\n            setNewName(\"\")\n            setNewNumber(\"\")\n            setMessage(`you update ${wantedPerson.name} to ${wantedPerson.number}`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 3000)\n          })\n          .catch(error =>{\n            setErrorMessage(`${wantedPerson.name} was already removed`)\n            setTimeout(() => {\n              window.location.reload()\n            }, 3000)\n          })\n      }\n\n    } else {\n      numberService\n        .create(newObject)\n        .then(returnedPerson =>{\n          setPersons(persons.concat(returnedPerson))\n          setNewName(\"\")\n          setNewNumber(\"\")\n          setMessage(`you added ${newObject.name}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3000)\n        })\n    }\n  }\n\n  //Tähän poisto\n  const cutNumber = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)){\n      numberService\n        .remove(person.id)\n        .then(() =>{\n          setMessage(`${person.name} will be removed in few seconds`)\n          setTimeout(() => {\n            window.location.reload()\n          }, 3000)\n          //\n        })\n    }\n  }\n\n  ////////Handlet\n  const handleChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const handleRemove = (person) => {\n    cutNumber(person)\n  }\n\n  const filterNames = (newFilter === \"\")\n    ? persons\n    : persons.filter(person =>\n        person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return(\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <ErrorNotification errorMessage={errorMessage} />\n\n      <FiltterIt value={newFilter} onChange={handleFilterChange}/>\n\n      <h2>add a new</h2>\n\n      <AddPerson onSubmit={addNumber}\n          name={{value: newName, onChange:handleChange}}\n          number={{value: newNumber, onChange: handleNumberChange}}/>\n\n      <h2>Numbers</h2>\n\n      <ul>\n        {filterNames.map(person =>\n            <PrintPerson key={person.name} person={person} handleRemove={handleRemove}/>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}